{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haviajoe\\\\Desktop\\\\ItunesSearch\\\\ClientApp\\\\itunes-search\\\\src\\\\components\\\\MediaDetails.js\";\nimport React, { Component, Fragment } from 'react';\nimport ReactPlayer from 'react-player';\nimport { Media, Button } from 'reactstrap';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nexport default class extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      track: {}\n    };\n\n    this.goBack = () => {\n      this.props.history.goBack();\n    };\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    fetch(`https://localhost:44383/search/Lookup/${id}`).then(res => res.json()).then(json => this.setState({\n      track: json.detailsRes[0],\n      loading: false\n    }));\n  }\n\n  render() {\n    const {\n      trackName,\n      artistName,\n      trackPrice,\n      currency,\n      artworkUrl100,\n      previewUrl\n    } = this.state.track;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(ClipLoader, {\n      size: 400,\n      color: \"#123abc\",\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, trackName), React.createElement(Media, {\n      object: true,\n      src: artworkUrl100,\n      alt: trackName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \" \", React.createElement(\"u\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Artist:\")), \" \", artistName), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \" \", React.createElement(\"u\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Track Name:\")), \" \", trackName), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \" \", React.createElement(\"u\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Price:\")), \" \", trackPrice, \" \", currency), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Play Demo:\"), React.createElement(ReactPlayer, {\n      controls: true,\n      url: previewUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.goBack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Go Back\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/haviajoe/Desktop/ItunesSearch/ClientApp/itunes-search/src/components/MediaDetails.js"],"names":["React","Component","Fragment","ReactPlayer","Media","Button","ClipLoader","state","loading","track","goBack","props","history","componentDidMount","id","match","params","fetch","then","res","json","setState","detailsRes","render","trackName","artistName","trackPrice","currency","artworkUrl100","previewUrl"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,KAAT,EAAeC,MAAf,QAA6B,YAA7B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAIA,eAAe,cAAcL,SAAd,CAAwB;AAAA;AAAA;AAAA,SACrCM,KADqC,GAC7B;AACNC,MAAAA,OAAO,EAAE,IADH;AAENC,MAAAA,KAAK,EAAE;AAFD,KAD6B;;AAAA,SAcrCC,MAdqC,GAc5B,MAAM;AACb,WAAKC,KAAL,CAAWC,OAAX,CAAmBF,MAAnB;AACD,KAhBoC;AAAA;;AAMrCG,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,MAAhC;AAEAC,IAAAA,KAAK,CAAE,yCAAwCH,EAAG,EAA7C,CAAL,CACGI,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQE,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAEZ,MAAAA,KAAK,EAAEW,IAAI,CAACE,UAAL,CAAgB,CAAhB,CAAT;AAA4Bd,MAAAA,OAAO,EAAE;AAArC,KAAd,CAFhB;AAGD;;AAMDe,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,SADI;AAEJC,MAAAA,UAFI;AAGJC,MAAAA,UAHI;AAIJC,MAAAA,QAJI;AAKJC,MAAAA,aALI;AAMJC,MAAAA;AANI,QAOF,KAAKtB,KAAL,CAAWE,KAPf;AASA,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACQ,MAAA,IAAI,EAAE,GADd;AAEQ,MAAA,KAAK,EAAE,SAFf;AAGQ,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,OAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKgB,SAAL,CANF,EAOE,oBAAC,KAAD;AAAO,MAAA,MAAM,MAAb;AAAc,MAAA,GAAG,EAAEI,aAAnB;AAAkC,MAAA,GAAG,EAAEJ,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAH,CAAL,OAA4BC,UAA5B,CATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAH,CAAL,OAAgCD,SAAhC,CAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,CAAL,OAA2BE,UAA3B,OAAwCC,QAAxC,CAXF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZF,EAaE,oBAAC,WAAD;AAAa,MAAA,QAAQ,MAArB;AAAsB,MAAA,GAAG,EAAEE,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,EAcE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAE,KAAKnB,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAdF,CADF;AAkBD;;AA9CoC","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport ReactPlayer from 'react-player'\r\nimport { Media,Button } from 'reactstrap'\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\n\r\n\r\nexport default class extends Component {\r\n  state = {\r\n    loading: true,\r\n    track: {}\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params\r\n\r\n    fetch(`https://localhost:44383/search/Lookup/${id}`)\r\n      .then(res => res.json())\r\n      .then(json => this.setState({ track: json.detailsRes[0],loading: false }))\r\n  }\r\n\r\n  goBack = () => {\r\n    this.props.history.goBack()\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      trackName,\r\n      artistName,\r\n      trackPrice,\r\n      currency,\r\n      artworkUrl100,\r\n      previewUrl\r\n    } = this.state.track\r\n\r\n    return (\r\n      <Fragment>\r\n        <ClipLoader\r\n                size={400}\r\n                color={\"#123abc\"}\r\n                loading={this.state.loading}\r\n        />\r\n        <h1>{trackName}</h1>\r\n        <Media object src={artworkUrl100} alt={trackName} />\r\n        <hr />\r\n        <h2> <u><b>Artist:</b></u> {artistName}</h2>\r\n        <h2> <u><b>Track Name:</b></u> {trackName}</h2> \r\n        <h2> <u><b>Price:</b></u> {trackPrice} {currency}</h2> \r\n        <h3>Play Demo:</h3>\r\n        <ReactPlayer controls url={previewUrl} />\r\n        <Button color=\"primary\" onClick={this.goBack}>Go Back</Button>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}